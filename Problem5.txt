Problem 5:

Pre-work
Please perform these steps before solving the problem

Login to MySQL using below commands on a fresh terminal window
mysql -u retail_dba -p
Password = cloudera
Create a replica product table and name it products_replica
create table products_replica as select * from products;
Add primary key to the newly created table
alter table products_replica add primary key (product_id);
Add two more columns
alter table products_replica add column (product_grade int, product_sentiment varchar(100));
Run below two update statements to modify the data
update products_replica set product_grade = 1  where product_price > 500;
update products_replica set product_sentiment  = ‘WEAK’  where product_price between 300 and  500;


**** Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a ‘|’ and lines are separated by ‘\n’. 
	Null values are represented as -1 for numbers and “NOT-AVAILABLE” for strings. 
	Only records with product id greater than or equal to 1 and less than or equal to 1000 should be imported and use 3 mappers for importing. 
	The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text.

	
**** Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a ‘*’ and lines are separated by ‘\n’. 
	Null values are represented as -1000 for numbers and “NA” for strings. 
	Only records with product id less than or equal to 1111 should be imported and use 2 mappers for importing. 
	The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text-part1.
	

****Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a ‘*’ and lines are separated by ‘\n’. 
	Null values are represented as -1000 for numbers and “NA” for strings. 
	Only records with product id greater than 1111 should be imported and use 5 mappers for importing. 
	The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text-part2.	
	

**** Using sqoop merge data available in /user/cloudera/problem5/products-text-part1 and /user/cloudera/problem5/products-text-part2 to produce a new set of 
	files in /user/cloudera/problem5/products-text-both-parts


**** Using sqoop do the following. Read the entire steps before you create the sqoop job.
		create a sqoop job Import Products_replica table as text file to directory /user/cloudera/problem5/products-incremental. Import all the records.
		insert three more records to Products_replica from mysql
		run the sqoop job again so that only newly added records can be pulled from mysql
		insert 2 more records to Products_replica from mysql
		run the sqoop job again so that only newly added records can be pulled from mysql
		Validate to make sure the records have not be duplicated in HDFS	
		

****  Using sqoop do the following. Read the entire steps before you create the sqoop job.
	create a hive table in database named problem5 using below command
	create table products_hive  (product_id int, product_category_id int, product_name string, product_description string, product_price float, product_imaage string,product_grade int,  product_sentiment string);
	create a sqoop job Import Products_replica table as hive table to database named problem5. name the table as products_hive.
	insert three more records to Products_replica from mysql
	run the sqoop job again so that only newly added records can be pulled from mysql
	insert 2 more records to Products_replica from mysql
	run the sqoop job again so that only newly added records can be pulled from mysql
	Validate to make sure the records have not been duplicated in Hive table
	
	
**** Using sqoop do the following. .
	insert 2 more records into products_hive table using hive.
	create table in mysql using below command
	create table products_external  (product_id int(11) primary Key, product_grade int(11), product_category_id int(11), product_name varchar(100), product_description varchar(100), product_price float, product_impage varchar(500), product_sentiment varchar(100));
	export data from products_hive (hive) table to (mysql) products_external table.
	insert 2 more records to Products_hive table from hive
	export data from products_hive table to products_external table.
	Validate to make sure the records have not be duplicated in mysql table	
	

	
sqoop import --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity 
--query "select * from products_replica where product_id between  1 and 1000 
--target-dir '/user/cloudera/problem5/products-text'
--fields-terminated-by "|"
--lines-terminated-by "\n"
--null-string "NOT AVAILABLE"
--null-non-string -l
--m 3
--as-textfile
--outdir /home/esakkipillai/sqoop


--boundary-query "select min(product_id), max(product_id) from products_replica where product_id between 1 and 1000";


****2

sqoop import --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity 
--table products_replica
--target-dir "/user/cloudera/problem5/products-text-part1"
--fields-terminated-by "*"
--lines-terminated-by "\n"
--null-non-string -1000
--null-string "NA"
--where "product_id <=1111"
--m 2
--outdir "/home/esakkipillai/sqoop2"
--boundary-query "select min(product_id) ,max(product_id) from product_replica where product_id <=1111" ;


****3
sqoop import --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity 
--table products_replica
--target-dir "/user/cloudera/problem5/products-text-part2"
--fields-terminated-by "*"
--lines-terminated-by "\n"
--null-non-string -1000
--null-string "NA"
--where "product_id >1111"
--m 5
--as-textfile
--outdir "/nome/esakkipillai/sqoop3"
--boundary-query "select min(product_id) , max(product_id) from products_replica where product_id >11111 ") ;



****4 

/user/cloudera/problem5/products-text-part1   
/user/cloudera/problem5/products-text-part2

merege it into /user/cloudera/problem5/products-text-both-parts 

sqoop merge 
--class-name products_replica 
--jar-file tmp/sqoop-cloudera/compile/66b4f23796be7625138f2171a7331cd3/products_replica.jar  
--new-data /user/cloudera/problem5/products-text-part2 
--onto /user/cloudera/problem5/products-text-part1
--target-dir /user/cloudera/problem5/products-text-both-parts 
--merge-key product_id ;




****5
sqoop job --create first_sqoop_job 
--import --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity 
--table products_replica
--target-dir "/user/cloudera/problem5/products-incremental"
--as-textfile
--check-columns product_id 
 --incremental append 
 --last-value 0 

insert into products_replica 
  values (1346,2,'something 1','something 2',300.00,'not avaialble',3,'STRONG');
insert into products_replica 
  values (1347,5,'something 787','something 2',356.00,'not avaialble',3,'STRONG');

  
 sqoop import --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity
 --table products_replica
 --check-columns product_id 
 --incremental append 
 --last-value 1345
 --target-dir "/user/cloudera/problem5/products-incremental"
--as-textfile

insert into products_replica 
  values (1376,4,'something 1376','something 2',1.00,'not avaialble',3,'WEAK');
insert into products_replica 
  values (1365,4,'something 1376','something 2',10.00,'not avaialble',null,'NOT APPLICABLE');

sqoop job --exec first_sqoop_job 



****6 

create database problem5;

create table products_hive  (product_id int, product_category_id int, product_name string, product_description string, product_price float, product_imaage string,product_grade int,  product_sentiment string);

sqoop job --create sqoop_hive_job 
--import --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity
--table Products_replica
--hive-import 
--hive-table problem5.products_hive
--target-dir "/user/hive/warehouse/problem5/products_replica"
--check-columns product_id 
--incremental append
--last-value 0


--hive-import --hive-overwrite --create-hive-table --hive-tabl database.tablename 


*****7
insert 2 more records into products_hive table using hive.

	insert into table products_hive 
		values (1380,4,'something 1380','something 2',8.00,'not avaialble',3,'NOT APPLICABLE');
insert into table products_hive 
		values (1381,4,'something 1380','something 2',8.00,'not avaialble',3,'NOT APPLICABLE');
  
	create table in mysql using below command
	
	create table products_external  (product_id int(11) primary Key, product_grade int(11), product_category_id int(11), product_name varchar(100), product_description varchar(100), product_price float, product_impage varchar(500), product_sentiment varchar(100));
	export data from products_hive (hive) table to (mysql) products_external table.
	
			sqoop -export --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity
			--table products_external 
			--export-dir ""/user/hive/warehouse/problem5/products_replica"
			--fields-terminated-by '\001'
			--input-null-non-string 1000
			--input-null-string "NA"
			--update-mode allowinsert 
			--update-key product_id
			
			
	insert 2 more records to Products_hive table from hive
	export data from products_hive table to products_external table.
		sqoop -export --connect jdbc://mysql:nn01.itversity.com:3306/retail_db --username retail_dba --password itversity
			--table products_external 
			--columns "product_id,product_category_id,product_name,product_description,product_price,product_impage,product_grade,product_sentiment" \
 			--export-dir ""/user/hive/warehouse/problem5/products_replica"
			--fields-terminated-by '\001'
			--input-null-non-string 1000
			--input-null-string "NA"
			--update-mode allowinsert 
			--update-key product_id
			
		
	Validate to make sure the records have not be duplicated in mysql table


	
	
	
	